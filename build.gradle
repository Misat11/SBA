defaultTasks 'clean', 'screamCompile'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url = 'https://repo.screamingsandals.org/public'
        }
        maven {
            url = uri('https://repo.dmulloy2.net/nexus/repository/public/')
        }
        maven {
            url = uri('https://repo.dmulloy2.net/nexus/repository/public/')
        }
        maven {
            url = uri('https://repo.screamingsandals.org/public')
        }
        maven {
            url = uri('https://repo.screamingsandals.org/releases')
        }
        maven {
            url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/')
        }
        maven {
            url = uri('https://papermc.io/repo/repository/maven-public/')
        }
        maven {
            url = uri('https://repo.maven.apache.org/maven2/')
        }
        
        maven {
            url = uri('https://repo.screamingsandals.org/snapshots')
        }
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }
    dependencies {
        classpath 'org.screamingsandals.gradle:builder:' + SCREAMING_PLUGIN_BUILDER_VERSION
    }
    dependencies {
        classpath "com.github.gmazzo:gradle-buildconfig-plugin:${BUILDCONFIG_VERSION}"
    }
    dependencies {
        classpath "org.ajoberstar.grgit:org.ajoberstar.grgit.gradle.plugin:5.0.0"
    }
}

ext {
    try{
        // Open the Git repository in the current directory.
        revision = org.ajoberstar.grgit.Grgit.open(dir:file('.').getAbsolutePath()).head().abbreviatedId
    } catch(Exception e) {
        revision = "NON_GIT"
        println("Exception: ${e}")
    }
    // Alternative is using abbreviatedId of head() method.
    // revision = git.head().abbreviatedId
}
tasks.register("describe") {
  doFirst {
    try{
        println org.ajoberstar.grgit.Grgit.open(dir:file('.').getAbsolutePath()).head().abbreviatedId
    } catch(Exception e) {
        revision = "NON_GIT"
        println("Running outside of git")
    }
  }
}

allprojects {
    group = 'io.pronze'
    version = SBA_VERSION
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.screamingsandals.plugin-builder'
    
    //apply plugin: 'org.screamingsandals.gradle.builder'

    enableShadowPlugin()

    configurations.all {
        // Check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url = uri('https://repo.dmulloy2.net/nexus/repository/public/')
        }
        maven {
            url = uri('https://repo.screamingsandals.org/public')
        }
        maven {
            url = uri('https://repo.screamingsandals.org/releases')
        }
        maven {
            url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/')
        }
        maven {
            url = uri('https://repo.papermc.io/repository/maven-public/')
        }
        maven {
            url = uri('https://repo.maven.apache.org/maven2/')
        }
        maven {
            url = uri('https://repo.screamingsandals.org/snapshots')
        }
        maven{ url= uri("https://repo.citizensnpcs.co/")}
        maven{ url= uri("https://moyskleytech.com/debian/m2/")}
        maven{ url= uri("https://nexus.sparky.ac/repository/Sparky/")}
    }

    dependencies {
        //compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
        //compileOnly 'org.spigotmc:spigot-api:1.9.4-R0.1-SNAPSHOT'
        compileOnly paperLegacy(PAPER_LEGACY_VERSION)
        compileOnly 'org.screamingsandals.bedwars:BedWars:' + BEDWARS_VERSION
        compileOnly 'org.screamingsandals.bedwars:BedWars-API:' + BEDWARS_VERSION
    }

    shadowJar {
        minimize()
        relocate 'org.spongepowered.configurate', 'sba.configurate'
        relocate 'org.yaml.snakeyaml', 'sba.snakeyaml'
        relocate 'net.kyori', 'sba.kyori'
        relocate 'cloud.commandframework', 'sba.cloud'
        relocate 'me.lucko.commodore', 'sba.commodore'
        relocate 'org.screamingsandals.lib', 'sba.screaminglib'
        relocate 'org.screamingsandals.simpleinventories', 'sba.simpleinventories'
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
    sourceCompatibility = '11.0'
}



